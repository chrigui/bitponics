extends ../layout

block head
  base(href="/setup/device/")
  script(src='//ajax.googleapis.com/ajax/libs/angularjs/1.1.5/angular.min.js')
  mixin requirejs("/assets/js/pages/account/devices")

block css 
  link(rel='stylesheet', href='/assets/css/pages/account-devices.css')
  //- link(rel='stylesheet', href='/assets/css/libs/steps.css')

block content
  section.header
    header
      include /includes/nav/main
  
  section#main(role="main", class="main")
    div.content-module.middle(ng-controller="bpn.controllers.account.devices.Main")
      h1.page-heading Manage Devices
      section.separator-top

        img.page-spinner.spinner(src="/assets/img/spinner.svg", ng-hide="true")

        a(href="/guides/bitponics-open-hardware") Bitponics Open Hardware Guide
        br
        a(href="/setup", ng-cloak) Set up a new Bitponics Device

        if (userOwnedDevices.length > 0)
          ul.device-list(ng-cloak)
            each device in userOwnedDevices
              li

                div.display-t
                  
                  div.display-tr
                    span(class="label display-tc") Name: 
                    span(class="value device-name display-tc") #{device.name}

                  div.display-tr
                    span.label.display-tc MAC Address: 
                    span(class="value device-mac-address display-tc") #{device._id}

                  - if (device.combinedKey)
                    div.display-tr
                      span.label Device Key: 
                      span(class="value device-mac-address display-tc") #{device.combinedKey}

                  - if (device.activeGrowPlanInstance)
                    div.display-tr
                      span(class="label") Garden:
                      span(class="value display-tc")
                        a(href="/gardens/#{device.activeGrowPlanInstance._id}") #{device.activeGrowPlanInstance.name}
                  - if (device.recentSensorLogs)
                    div.display-tr
                      span(class="label") Last log: 
                      span(class="value display-tc") #{device.recentSensorLogs[0]}
                  - if (device.lastConnectionAt)
                    div.display-tr
                      span(class="label") Last Connection: 
                      span(class="value display-tc") #{device.lastConnectionAt}

                  each outputMapping, i in device.outputMap
                    div.device-outlet-mapping.display-tr
                            span(class="label", data-id="#{outputMapping.outputId}") Outlet ##{i+1}: 
                            //- span(class="value display-tc") #{outputMapping.outputId}
                            - if (outputMapping.control)
                              span(class="value") #{outputMapping.control.name}
                            - else
                              div(class="value") 
                                a(href="/account/devices/#{device._id}/outlet-map", target="_blank") 
                                  | Set

                div.actions
                  - if (typeof device.status.calibrationMode !== 'undefined')
                    div
                      span(class="label") Calibration Mode: 
                      span(class="value") Device is currently attempting to calibrate #{device.status.calibrationMode}
                      form(action="/account/devices/#{device._id}", method="POST")
                        input(type="hidden", name="clearCalibrationMode", value="true")
                        button(type="submit") Exit Calibrate Mode
                  - else 
                      a(class="btn next-step-btn calibrate-device-item", href="/account/devices/#{device._id}/calibrate")
                        | Calibrate 
                  
                  a(class="btn next-step-btn", href="/account/devices/#{device._id}/outlet-map", target="_blank") 
                      | Map power outlets

                  a(class="btn next-step-btn", href="#{appUrl}/setup", target="_blank") 
                      | Pair to Wifi
